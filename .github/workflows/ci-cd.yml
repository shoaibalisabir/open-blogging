name: CI/CD for Open Blog Apps

on:
    push:
        branches:
            - main
            - master

env:
    MONGODB_URI: ${{ secrets.MONGODB_URI }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}


      - name: List current directory contents
        run: ls -al

      # Backend Build and Push
      - name: Build and push Backend Docker image
        run: |
          cd blog-backend
          docker build -t shoaibisone/open-blog:backend-latest .
          docker push shoaibisone/open-blog:backend-latest

      - name: Run Trivy vulnerability scanner backend
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: 'shoaibisone/open-blog:backend-latest'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy Frontend Image scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'


      # Frontend Build and Push
      - name: Build and push Frontend Docker image
        run: |
          cd blog-frontend
          docker build -t shoaibisone/open-blog:frontend-latest .
          docker push shoaibisone/open-blog:frontend-latest

      - name: Upload Trivy Frontend Image scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Run Trivy vulnerability scan frontend
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: 'shoaibisone/open-blog:frontend-latest'
          format: 'sarif'
          output: 'trivy-results.sarif'


      # Deploy to Kubernetes
      - name: SSH to AWS Instance and Deploy
        uses: easingthemes/ssh-deploy@main
        with:
          REMOTE_HOST: ${{ secrets.AWS_INSTANCE_IP }}  
          REMOTE_USER: minikube 
          SSH_PRIVATE_KEY: ${{ secrets.PRIVATE_SSH_KEY }}
          SCRIPT_BEFORE: |
            whoami
            ls -al
            # Create a directory for Kubernetes YAML files

            cd Blog_Project/kubernetes/


            # Copy YAML files from GitHub Actions runner to the AWS instance

            curl -O https://raw.githubusercontent.com/shoaibalisabir/open-blogging/refs/heads/master/kubernetes/backend-deployment.yaml
            curl -O https://raw.githubusercontent.com/shoaibalisabir/open-blogging/refs/heads/master/kubernetes/frontend-deployment.yaml
            curl -O https://raw.githubusercontent.com/shoaibalisabir/open-blogging/refs/heads/master/kubernetes/backend-service.yaml
            curl -O https://raw.githubusercontent.com/shoaibalisabir/open-blogging/refs/heads/master/kubernetes/frontend-service.yaml



            kubectl apply -f /home/minikube/Blog_Project/kubernetes/backend-deployment.yaml
            kubectl apply -f /home/minikube/Blog_Project/kubernetes/frontend-deployment.yaml
            kubectl apply -f /home/minikube/Blog_Project/kubernetes/backend-service.yaml
            kubectl apply -f /home/minikube/Blog_Project/kubernetes/frontend-service.yaml
 